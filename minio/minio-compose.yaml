volumes:
  minio-data:
    name: minio-data

services:
  minio:
    image: docker.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
    container_name: minio
    networks:
      breweries-net:
         aliases:
           - ${SPARK_WAREHOUSE_BUCKET:?}.minio
           - ${MINIO_BREWERIES_BUCKET:?}.minio

    volumes:
      - minio-data:/data
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: ${BREWERIES_PASSWORD:?}
      MINIO_DOMAIN: minio
    command: ["server", "--console-address", ":9001", "/data"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 200M

  minio-init:
    # Usando a versão mais próxima da minio server
    image: docker.io/minio/mc:RELEASE.2025-03-12T17-29-24Z
    container_name: minio-init
    networks:
      - breweries-net
    environment:
      - AWS_ENDPOINT=http://minio:9000
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=${BREWERIES_PASSWORD:?}
      - AWS_REGION=us-east-1
      - AWS_DEFAULT_BUCKETS=${MINIO_DEFAULT_BUCKETS:?}
    volumes:
      - ./minio-init.sh:/bin/minio-init.sh:ro
    entrypoint: ["/bin/bash"]
    command: ["/bin/minio-init.sh"]
    deploy:
      resources:
        limits:
          cpus: 1
          memory: 1G
    depends_on:
      minio:
        condition: service_healthy
